{
  "comments": [
    {
      "key": {
        "uuid": "3a79b1b5_af6f74c4",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/listener/IRUnderlayTopologyListenerTest.java",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-17T20:00:08Z",
      "side": 1,
      "message": "Change \"readTrandaction\" to \"readTransaction\".",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_cf72f0ac",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/listener/IRUnderlayTopologyListenerTest.java",
        "patchSetId": 8
      },
      "lineNbr": 181,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-17T20:00:08Z",
      "side": 1,
      "message": "This method isn\u0027t testing or verifying anything.",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_e7f74a8b",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/listener/IRUnderlayTopologyListenerTest.java",
        "patchSetId": 8
      },
      "lineNbr": 181,
      "author": {
        "id": 4674
      },
      "writtenOn": "2015-09-22T08:03:05Z",
      "side": 1,
      "message": "Not true. It is testing wheter function readExistingData is not throwing exception. If it does test will fail.",
      "parentUuid": "3a79b1b5_cf72f0ac",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_e824f7c7",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/listener/IRUnderlayTopologyListenerTest.java",
        "patchSetId": 8
      },
      "lineNbr": 181,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-22T15:20:45Z",
      "side": 1,
      "message": "A reasonable test needs to verify expected results from the execution of the CUT.  It\u0027s not reasonable to simply \"exercise\" the code and fail the test if it throws an unexpected exception.",
      "parentUuid": "1a76adc5_e7f74a8b",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_ef9c8cc2",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/provider/IRTopoProcessingProviderImplTest.java",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-17T20:00:08Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s necessary to define a dummy class for this.  Just mock the base abstract class.",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_c82426b1",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/provider/IRTopoProcessingProviderImplTest.java",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-18T15:09:13Z",
      "side": 1,
      "message": "I confirm, Mockito can mock abstract classes perfectly fine.  There is no need to create dummy subclasses of abstract classes.",
      "parentUuid": "3a79b1b5_ef9c8cc2",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_a72e32a4",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/provider/IRTopoProcessingProviderImplTest.java",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 4674
      },
      "writtenOn": "2015-09-22T08:03:05Z",
      "side": 1,
      "message": "I agree that we can mock abstract classes. However in this case we need to override protected methods from AbstractSchemaContext and thats not possible by using Mockito.",
      "parentUuid": "3a79b1b5_c82426b1",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_6831c70a",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/provider/IRTopoProcessingProviderImplTest.java",
        "patchSetId": 8
      },
      "lineNbr": 85,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-22T15:20:45Z",
      "side": 1,
      "message": "All you\u0027ve done in the overridden methods is have them return \"null\".  That\u0027s what you would get if you mocked the abstract class.",
      "parentUuid": "1a76adc5_a72e32a4",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_cfa990e0",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/request/IRTopologyRequestHandlerTest.java",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-17T20:00:08Z",
      "side": 1,
      "message": "I don\u0027t believe it\u0027s necessary to define this class.  Just mock an instance of CorrelationBase.",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a79b1b5_4f5ee013",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/request/IRTopologyRequestListenerTest.java",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 3576
      },
      "writtenOn": "2015-09-17T20:00:08Z",
      "side": 1,
      "message": "Isn\u0027t this the same as just \"thenReturn(InventoryRenderingModel.class)\"?",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_c219dc7a",
        "filename": "topoprocessing-inventory-rendering/src/test/java/org/opendaylight/topoprocessing/inventoryRendering/request/IRTopologyRequestListenerTest.java",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 4674
      },
      "writtenOn": "2015-09-22T08:03:05Z",
      "side": 1,
      "message": "We wish it would :) In scope of generic classes its something completely different.\nTo save you from testing: (Class\u003ccapture#3-of ? extends Model\u003e) is not applicable for the arguments (Class\u003cInventoryRenderingModel\u003e)... resp. (Class\u003ccapture#5-of ? extends Model\u003e)",
      "parentUuid": "3a79b1b5_4f5ee013",
      "revId": "442f6577dd304f5232cc7118b99cc13b47100c1e",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}