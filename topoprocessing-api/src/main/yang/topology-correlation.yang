/*
 * Copyright (c) 2015 Pantheon Technologies s.r.o. and others. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v1.0 which accompanies this distribution,
 * and is available at http://www.eclipse.org/legal/epl-v10.html
 */
 
 module topology-correlation {

    namespace "urn:opendaylight:topology:correlation";
    prefix "topo-correlation";

    import network-topology {prefix topo; revision-date "2013-10-21";}
    import yang-ext {prefix ext; revision-date "2013-07-09";}

    revision "2015-01-21" {
        description "Topology Processing Framework correlation definition";
    }

    typedef leaf-path {
        description "Path to leaf that shall be compared.
        This definition should be tuned later.
        Something like RelativeSchemaPath might be useful.";
        type string;
    }

    typedef correlation-item-enum {
        description  "Supported corelation items";
        type enumeration {
            enum node {
                description "node";
            }
            enum link {
                description "link";
            }
            enum termination-point {
                description "termination-point";
            }
        }
    }

    identity correlation-base {
        description "Base identity for correlation types";
    }

    identity equality {
        description "All referenced leaves must be equal (of the same value)";
        base correlation-base;
    }

    
// TODO replace tab for 4spaces
    augment "/topo:network-topology/topo:topology" {
        ext:augment-identifier "correlation-augment";
        container correlations {
            list correlation {
                key name;
                
                leaf name {
                    type identityref {
                        base correlation-base;
                    }
                }
                leaf correlation-item {
                    type correlation-item-enum;
                }
                choice correlation-type {
                    case equality-case {
                        container equality {
                            uses mapping-grouping;
                        }
                    }
                    case unification-case {
                        container unification {
                            uses mapping-grouping;
                        }
                    }
                }
                
            }
        }
    }
    grouping mapping-grouping {
        list mapping {
            key "underlay-topology target-field";
            leaf underlay-topology {
                type string;
                description "Input topology which will be used for aggregation.";
            }
            leaf target-field {
                type leaf-path;
                description "Path to target field";
            }
        }
    }
}